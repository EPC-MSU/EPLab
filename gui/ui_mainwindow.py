# -*- coding: utf-8 -*-

import os
from PyQt5.QtCore import (QCoreApplication, QMetaObject, QObject, QPoint,
    QRect, QSize, QUrl, Qt)
from PyQt5.QtGui import (QBrush, QColor, QConicalGradient, QCursor, QFont,
    QFontDatabase, QIcon, QLinearGradient, QPalette, QPainter, QPixmap,
    QRadialGradient)
from PyQt5.QtWidgets import *


class Ui_MainWindow(QMainWindow):

    dir_name = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

    def setupUi(self, MainWindow):
        if MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.resize(1233, 841)
        self.new_file_action = QAction(MainWindow)
        self.new_file_action.setObjectName(u"new_file_action")
        icon = QIcon()
        icon.addFile(os.path.join(self.dir_name, "media/newfile.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.new_file_action.setIcon(icon)
        self.open_file_action = QAction(MainWindow)
        self.open_file_action.setObjectName(u"open_file_action")
        icon1 = QIcon()
        icon1.addFile(os.path.join(self.dir_name, "media/open.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.open_file_action.setIcon(icon1)
        self.save_file_action = QAction(MainWindow)
        self.save_file_action.setObjectName(u"save_file_action")
        icon2 = QIcon()
        icon2.addFile(os.path.join(self.dir_name, "media/savefile.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.save_file_action.setIcon(icon2)
        self.save_as_file_action = QAction(MainWindow)
        self.save_as_file_action.setObjectName(u"save_as_file_action")
        icon3 = QIcon()
        icon3.addFile(os.path.join(self.dir_name, "media/savefileas.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.save_as_file_action.setIcon(icon3)
        self.save_screen_action = QAction(MainWindow)
        self.save_screen_action.setObjectName(u"save_screen_action")
        icon4 = QIcon()
        icon4.addFile(os.path.join(self.dir_name, "media/screen.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.save_screen_action.setIcon(icon4)
        self.open_window_board_action = QAction(MainWindow)
        self.open_window_board_action.setObjectName(u"open_window_board_action")
        icon5 = QIcon()
        icon5.addFile(os.path.join(self.dir_name, "media/openboard.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.open_window_board_action.setIcon(icon5)
        self.freeze_curve_a_action = QAction(MainWindow)
        self.freeze_curve_a_action.setObjectName(u"freeze_curve_a_action")
        self.freeze_curve_a_action.setCheckable(True)
        icon6 = QIcon()
        icon6.addFile(os.path.join(self.dir_name, "media/freezea.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.freeze_curve_a_action.setIcon(icon6)
        self.freeze_curve_b_action = QAction(MainWindow)
        self.freeze_curve_b_action.setObjectName(u"freeze_curve_b_action")
        self.freeze_curve_b_action.setCheckable(True)
        icon7 = QIcon()
        icon7.addFile(os.path.join(self.dir_name, "media/freezeb.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.freeze_curve_b_action.setIcon(icon7)
        self.comparing_mode_action = QAction(MainWindow)
        self.comparing_mode_action.setObjectName(u"comparing_mode_action")
        self.comparing_mode_action.setCheckable(True)
        self.comparing_mode_action.setChecked(True)
        icon8 = QIcon()
        icon8.addFile(os.path.join(self.dir_name, "media/test_plan_tab_s_icon.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.comparing_mode_action.setIcon(icon8)
        self.comparing_mode_action.setAutoRepeat(False)
        self.writing_mode_action = QAction(MainWindow)
        self.writing_mode_action.setObjectName(u"writing_mode_action")
        self.writing_mode_action.setCheckable(True)
        icon9 = QIcon()
        icon9.addFile(os.path.join(self.dir_name, "media/test_plan_tab_zp_icon.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.writing_mode_action.setIcon(icon9)
        self.writing_mode_action.setAutoRepeat(False)
        self.testing_mode_action = QAction(MainWindow)
        self.testing_mode_action.setObjectName(u"testing_mode_action")
        self.testing_mode_action.setCheckable(True)
        icon10 = QIcon()
        icon10.addFile(os.path.join(self.dir_name, "media/test_plan_tab_tp_icon.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.testing_mode_action.setIcon(icon10)
        self.testing_mode_action.setAutoRepeat(False)
        self.about_action = QAction(MainWindow)
        self.about_action.setObjectName(u"about_action")
        icon11 = QIcon()
        icon11.addFile(os.path.join(self.dir_name, "media/help.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.about_action.setIcon(icon11)
        self.sound_enabled_action = QAction(MainWindow)
        self.sound_enabled_action.setObjectName(u"sound_enabled_action")
        self.sound_enabled_action.setCheckable(True)
        self.sound_enabled_action.setChecked(False)
        icon12 = QIcon()
        icon12.addFile(os.path.join(self.dir_name, "media/sound.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.sound_enabled_action.setIcon(icon12)
        self.settings_mode_action = QAction(MainWindow)
        self.settings_mode_action.setObjectName(u"settings_mode_action")
        icon13 = QIcon()
        icon13.addFile(os.path.join(self.dir_name, "media/test_plan_tab_c_icon.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.settings_mode_action.setIcon(icon13)
        self.next_point_action = QAction(MainWindow)
        self.next_point_action.setObjectName(u"next_point_action")
        self.next_point_action.setEnabled(False)
        icon14 = QIcon()
        icon14.addFile(os.path.join(self.dir_name, "media/right.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.next_point_action.setIcon(icon14)
        self.last_point_action = QAction(MainWindow)
        self.last_point_action.setObjectName(u"last_point_action")
        self.last_point_action.setEnabled(False)
        icon15 = QIcon()
        icon15.addFile(os.path.join(self.dir_name, "media/left.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.last_point_action.setIcon(icon15)
        self.new_point_action = QAction(MainWindow)
        self.new_point_action.setObjectName(u"new_point_action")
        self.new_point_action.setEnabled(False)
        icon16 = QIcon()
        icon16.addFile(os.path.join(self.dir_name, "media/newpoint.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.new_point_action.setIcon(icon16)
        self.save_point_action = QAction(MainWindow)
        self.save_point_action.setObjectName(u"save_point_action")
        self.save_point_action.setEnabled(False)
        icon17 = QIcon()
        icon17.addFile(os.path.join(self.dir_name, "media/save.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.save_point_action.setIcon(icon17)
        self.add_board_image_action = QAction(MainWindow)
        self.add_board_image_action.setObjectName(u"add_board_image_action")
        self.add_board_image_action.setEnabled(False)
        icon18 = QIcon()
        icon18.addFile(os.path.join(self.dir_name, "media/add_image.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.add_board_image_action.setIcon(icon18)
        self.search_optimal_action = QAction(MainWindow)
        self.search_optimal_action.setObjectName(u"search_optimal_action")
        icon19 = QIcon()
        icon19.addFile(os.path.join(self.dir_name, "media/searchparam.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.search_optimal_action.setIcon(icon19)
        self.add_cursor_action = QAction(MainWindow)
        self.add_cursor_action.setObjectName(u"add_cursor_action")
        self.add_cursor_action.setCheckable(True)
        icon20 = QIcon()
        icon20.addFile(os.path.join(self.dir_name, "media/add_label.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.add_cursor_action.setIcon(icon20)
        self.remove_cursor_action = QAction(MainWindow)
        self.remove_cursor_action.setObjectName(u"remove_cursor_action")
        self.remove_cursor_action.setCheckable(True)
        icon21 = QIcon()
        icon21.addFile(os.path.join(self.dir_name, "media/minus_label.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.remove_cursor_action.setIcon(icon21)
        self.hide_curve_a_action = QAction(MainWindow)
        self.hide_curve_a_action.setObjectName(u"hide_curve_a_action")
        self.hide_curve_a_action.setCheckable(True)
        icon22 = QIcon()
        icon22.addFile(os.path.join(self.dir_name, "media/show_a.png"), QSize(), QIcon.Normal, QIcon.Off)
        icon22.addFile(os.path.join(self.dir_name, "media/hide_a.png"), QSize(), QIcon.Active, QIcon.On)
        self.hide_curve_a_action.setIcon(icon22)
        self.hide_curve_b_action = QAction(MainWindow)
        self.hide_curve_b_action.setObjectName(u"hide_curve_b_action")
        self.hide_curve_b_action.setCheckable(True)
        icon23 = QIcon()
        icon23.addFile(os.path.join(self.dir_name, "media/show_b.png"), QSize(), QIcon.Normal, QIcon.Off)
        icon23.addFile(os.path.join(self.dir_name, "media/hide_b.jpg"), QSize(), QIcon.Active, QIcon.On)
        self.hide_curve_b_action.setIcon(icon23)
        self.connection_action = QAction(MainWindow)
        self.connection_action.setObjectName(u"connection_action")
        icon24 = QIcon()
        icon24.addFile(os.path.join(self.dir_name, "media/connection.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.connection_action.setIcon(icon24)
        self.select_language_action = QAction(MainWindow)
        self.select_language_action.setObjectName(u"select_language_action")
        icon25 = QIcon()
        icon25.addFile(os.path.join(self.dir_name, "media/language.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.select_language_action.setIcon(icon25)
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        MainWindow.setCentralWidget(self.centralwidget)
        self.scoreDock = QDockWidget(MainWindow)
        self.scoreDock.setObjectName(u"scoreDock")
        sizePolicy = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scoreDock.sizePolicy().hasHeightForWidth())
        self.scoreDock.setSizePolicy(sizePolicy)
        self.scoreDock.setMaximumSize(QSize(524287, 524287))
        self.scoreDock.setFeatures(QDockWidget.DockWidgetFloatable|QDockWidget.DockWidgetMovable)
        self.dockWidgetContents = QWidget()
        self.dockWidgetContents.setObjectName(u"dockWidgetContents")
        self.verticalLayout_5 = QVBoxLayout(self.dockWidgetContents)
        self.verticalLayout_5.setObjectName(u"verticalLayout_5")
        self.score_label = QLabel(self.dockWidgetContents)
        self.score_label.setObjectName(u"score_label")
        self.score_label.setMinimumSize(QSize(182, 0))
        self.score_label.setMaximumSize(QSize(16777215, 100))
        self.score_label.setTextFormat(Qt.RichText)
        self.score_label.setAlignment(Qt.AlignCenter)

        self.verticalLayout_5.addWidget(self.score_label)

        self.verticalSpacer_7 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.verticalLayout_5.addItem(self.verticalSpacer_7)

        self.scoreDock.setWidget(self.dockWidgetContents)
        MainWindow.addDockWidget(Qt.RightDockWidgetArea, self.scoreDock)
        self.freqDock = QDockWidget(MainWindow)
        self.freqDock.setObjectName(u"freqDock")
        self.freqDock.setFeatures(QDockWidget.DockWidgetFloatable|QDockWidget.DockWidgetMovable)
        self.freqLayout = QWidget()
        self.freqLayout.setObjectName(u"freqLayout")
        self.verticalLayout_7 = QVBoxLayout(self.freqLayout)
        self.verticalLayout_7.setObjectName(u"verticalLayout_7")
        self.freqDock.setWidget(self.freqLayout)
        MainWindow.addDockWidget(Qt.RightDockWidgetArea, self.freqDock)
        self.currentDock = QDockWidget(MainWindow)
        self.currentDock.setObjectName(u"currentDock")
        sizePolicy.setHeightForWidth(self.currentDock.sizePolicy().hasHeightForWidth())
        self.currentDock.setSizePolicy(sizePolicy)
        self.currentDock.setFeatures(QDockWidget.DockWidgetFloatable|QDockWidget.DockWidgetMovable)
        self.currentLayout = QWidget()
        self.currentLayout.setObjectName(u"currentLayout")
        self.verticalLayout_8 = QVBoxLayout(self.currentLayout)
        self.verticalLayout_8.setObjectName(u"verticalLayout_8")
        self.currentDock.setWidget(self.currentLayout)
        MainWindow.addDockWidget(Qt.RightDockWidgetArea, self.currentDock)
        self.voltageDock = QDockWidget(MainWindow)
        self.voltageDock.setObjectName(u"voltageDock")
        self.voltageDock.setFeatures(QDockWidget.DockWidgetFloatable|QDockWidget.DockWidgetMovable)
        self.voltageLayout = QWidget()
        self.voltageLayout.setObjectName(u"voltageLayout")
        self.verticalLayout_9 = QVBoxLayout(self.voltageLayout)
        self.verticalLayout_9.setObjectName(u"verticalLayout_9")
        self.voltageDock.setWidget(self.voltageLayout)
        MainWindow.addDockWidget(Qt.RightDockWidgetArea, self.voltageDock)
        self.commentDock = QDockWidget(MainWindow)
        self.commentDock.setObjectName(u"commentDock")
        self.commentDock.setFeatures(QDockWidget.DockWidgetFloatable|QDockWidget.DockWidgetMovable)
        self.dockWidgetContents_6 = QWidget()
        self.dockWidgetContents_6.setObjectName(u"dockWidgetContents_6")
        self.verticalLayout_10 = QVBoxLayout(self.dockWidgetContents_6)
        self.verticalLayout_10.setObjectName(u"verticalLayout_10")
        self.line_comment_pin = QLineEdit(self.dockWidgetContents_6)
        self.line_comment_pin.setObjectName(u"line_comment_pin")
        self.line_comment_pin.setClearButtonEnabled(False)

        self.verticalLayout_10.addWidget(self.line_comment_pin)

        self.save_comment_push_button = QPushButton(self.dockWidgetContents_6)
        self.save_comment_push_button.setObjectName(u"save_comment_push_button")

        self.verticalLayout_10.addWidget(self.save_comment_push_button)

        self.commentDock.setWidget(self.dockWidgetContents_6)
        MainWindow.addDockWidget(Qt.RightDockWidgetArea, self.commentDock)
        self.menuBar = QMenuBar(MainWindow)
        self.menuBar.setObjectName(u"menuBar")
        self.menuBar.setGeometry(QRect(0, 0, 1233, 21))
        self.file_menu_action = QMenu(self.menuBar)
        self.file_menu_action.setObjectName(u"file_menu_action")
        self.view_menu_action = QMenu(self.menuBar)
        self.view_menu_action.setObjectName(u"view_menu_action")
        self.mode_menu_action = QMenu(self.menuBar)
        self.mode_menu_action.setObjectName(u"mode_menu_action")
        self.help_menu_action = QMenu(self.menuBar)
        self.help_menu_action.setObjectName(u"help_menu_action")
        self.test_plan_menu_action = QMenu(self.menuBar)
        self.test_plan_menu_action.setObjectName(u"test_plan_menu_action")
        self.measurers_menu = QMenu(self.menuBar)
        self.measurers_menu.setObjectName(u"measurers_menu")
        MainWindow.setMenuBar(self.menuBar)
        self.toolBar_file = QToolBar(MainWindow)
        self.toolBar_file.setObjectName(u"toolBar_file")
        sizePolicy1 = QSizePolicy(QSizePolicy.Fixed, QSizePolicy.Fixed)
        sizePolicy1.setHorizontalStretch(0)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.toolBar_file.sizePolicy().hasHeightForWidth())
        self.toolBar_file.setSizePolicy(sizePolicy1)
        self.toolBar_file.setToolTipDuration(-1)
        MainWindow.addToolBar(Qt.TopToolBarArea, self.toolBar_file)
        self.toolBar_test = QToolBar(MainWindow)
        self.toolBar_test.setObjectName(u"toolBar_test")
        self.toolBar_test.setMinimumSize(QSize(0, 0))
        self.toolBar_test.setAcceptDrops(False)
        self.toolBar_test.setToolButtonStyle(Qt.ToolButtonFollowStyle)
        MainWindow.addToolBar(Qt.TopToolBarArea, self.toolBar_test)
        self.toolBar_write = QToolBar(MainWindow)
        self.toolBar_write.setObjectName(u"toolBar_write")
        self.toolBar_write.setToolButtonStyle(Qt.ToolButtonTextBesideIcon)
        MainWindow.addToolBar(Qt.TopToolBarArea, self.toolBar_write)
        self.toolBar_cursor = QToolBar(MainWindow)
        self.toolBar_cursor.setObjectName(u"toolBar_cursor")
        self.toolBar_cursor.setMinimumSize(QSize(0, 0))
        self.toolBar_cursor.setToolButtonStyle(Qt.ToolButtonTextBesideIcon)
        MainWindow.addToolBar(Qt.TopToolBarArea, self.toolBar_cursor)
        self.toolBar_compare = QToolBar(MainWindow)
        self.toolBar_compare.setObjectName(u"toolBar_compare")
        MainWindow.addToolBar(Qt.TopToolBarArea, self.toolBar_compare)
        self.toolBar_mode = QToolBar(MainWindow)
        self.toolBar_mode.setObjectName(u"toolBar_mode")
        self.toolBar_mode.setIconSize(QSize(30, 30))
        self.toolBar_mode.setToolButtonStyle(Qt.ToolButtonTextBesideIcon)
        MainWindow.addToolBar(Qt.TopToolBarArea, self.toolBar_mode)
        self.toolBar_language = QToolBar(MainWindow)
        self.toolBar_language.setObjectName(u"toolBar_language")
        MainWindow.addToolBar(Qt.TopToolBarArea, self.toolBar_language)

        self.menuBar.addAction(self.file_menu_action.menuAction())
        self.menuBar.addAction(self.view_menu_action.menuAction())
        self.menuBar.addAction(self.mode_menu_action.menuAction())
        self.menuBar.addAction(self.test_plan_menu_action.menuAction())
        self.menuBar.addAction(self.measurers_menu.menuAction())
        self.menuBar.addAction(self.help_menu_action.menuAction())
        self.file_menu_action.addAction(self.connection_action)
        self.file_menu_action.addSeparator()
        self.file_menu_action.addAction(self.new_file_action)
        self.file_menu_action.addAction(self.open_file_action)
        self.file_menu_action.addAction(self.save_file_action)
        self.file_menu_action.addAction(self.save_as_file_action)
        self.file_menu_action.addSeparator()
        self.file_menu_action.addAction(self.save_screen_action)
        self.view_menu_action.addAction(self.open_window_board_action)
        self.view_menu_action.addAction(self.freeze_curve_a_action)
        self.view_menu_action.addAction(self.freeze_curve_b_action)
        self.view_menu_action.addAction(self.hide_curve_a_action)
        self.view_menu_action.addAction(self.hide_curve_b_action)
        self.view_menu_action.addSeparator()
        self.view_menu_action.addAction(self.search_optimal_action)
        self.mode_menu_action.addAction(self.comparing_mode_action)
        self.mode_menu_action.addAction(self.writing_mode_action)
        self.mode_menu_action.addAction(self.testing_mode_action)
        self.mode_menu_action.addSeparator()
        self.mode_menu_action.addAction(self.sound_enabled_action)
        self.mode_menu_action.addSeparator()
        self.mode_menu_action.addAction(self.settings_mode_action)
        self.help_menu_action.addAction(self.about_action)
        self.test_plan_menu_action.addAction(self.next_point_action)
        self.test_plan_menu_action.addAction(self.last_point_action)
        self.test_plan_menu_action.addSeparator()
        self.test_plan_menu_action.addAction(self.new_point_action)
        self.test_plan_menu_action.addAction(self.save_point_action)
        self.test_plan_menu_action.addAction(self.add_board_image_action)
        self.toolBar_file.addAction(self.new_file_action)
        self.toolBar_file.addAction(self.open_file_action)
        self.toolBar_file.addAction(self.save_file_action)
        self.toolBar_test.addAction(self.last_point_action)
        self.toolBar_test.addAction(self.next_point_action)
        self.toolBar_write.addAction(self.new_point_action)
        self.toolBar_write.addAction(self.save_point_action)
        self.toolBar_cursor.addAction(self.add_cursor_action)
        self.toolBar_cursor.addAction(self.remove_cursor_action)
        self.toolBar_compare.addAction(self.save_screen_action)
        self.toolBar_compare.addAction(self.freeze_curve_a_action)
        self.toolBar_compare.addAction(self.freeze_curve_b_action)
        self.toolBar_mode.addAction(self.comparing_mode_action)
        self.toolBar_mode.addAction(self.writing_mode_action)
        self.toolBar_mode.addAction(self.testing_mode_action)
        self.toolBar_language.addAction(self.select_language_action)

        self.retranslateUi(MainWindow)

        QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", "EPLab", None))
        self.new_file_action.setText(QCoreApplication.translate("MainWindow", "Создать план тестирования", None))
        self.open_file_action.setText(QCoreApplication.translate("MainWindow", "Открыть план тестирования", None))
        self.save_file_action.setText(QCoreApplication.translate("MainWindow", "Сохранить план тестирования", None))
        self.save_as_file_action.setText(QCoreApplication.translate("MainWindow", "Сохранить план тестирования как", None))
        self.save_screen_action.setText(QCoreApplication.translate("MainWindow", "Сохранить скриншот", None))
        self.open_window_board_action.setText(QCoreApplication.translate("MainWindow", "Открыть окно просмотра платы", None))
        self.freeze_curve_a_action.setText(QCoreApplication.translate("MainWindow", "Заморозить канал А", None))
        self.freeze_curve_a_action.setToolTip(QCoreApplication.translate("MainWindow", "<html><head/><body><p><span style=' color:#ff0000;'>Заморозить канал А</span></p></body></html>", None))
        self.freeze_curve_b_action.setText(QCoreApplication.translate("MainWindow", "Заморозить канал B", None))
        self.freeze_curve_b_action.setToolTip(QCoreApplication.translate("MainWindow", "<html><head/><body><p><span style=' color:#0000ff;'>Заморозить канал B</span></p></body></html>", None))
        self.freeze_curve_b_action.setWhatsThis("")
        self.comparing_mode_action.setText(QCoreApplication.translate("MainWindow", "Сравнение", None))
        self.comparing_mode_action.setIconText(QCoreApplication.translate("MainWindow", "Сравнение", None))
        self.writing_mode_action.setText(QCoreApplication.translate("MainWindow", "Запись плана тестирования", None))
        self.testing_mode_action.setText(QCoreApplication.translate("MainWindow", "Тестирование по плану", None))
        self.about_action.setText(QCoreApplication.translate("MainWindow", "О программе", None))
        self.sound_enabled_action.setText(QCoreApplication.translate("MainWindow", "Звук", None))
        self.settings_mode_action.setText(QCoreApplication.translate("MainWindow", "Настройки", None))
        self.next_point_action.setText(QCoreApplication.translate("MainWindow", "Следующая точка", None))
        self.last_point_action.setText(QCoreApplication.translate("MainWindow", "Предыдущая точка", None))
        self.new_point_action.setText(QCoreApplication.translate("MainWindow", "Новая точка", None))
        self.new_point_action.setIconText(QCoreApplication.translate("MainWindow", " Новая точка", None))
        self.save_point_action.setText(QCoreApplication.translate("MainWindow", "Сохранить точку", None))
        self.save_point_action.setIconText(QCoreApplication.translate("MainWindow", " Сохранить точку", None))
        self.add_board_image_action.setText(QCoreApplication.translate("MainWindow", "Добавить изображение", None))
        self.search_optimal_action.setText(QCoreApplication.translate("MainWindow", "Автоподбор параметров", None))
        self.add_cursor_action.setText(QCoreApplication.translate("MainWindow", "Добавить  метку", None))
        self.add_cursor_action.setIconText(QCoreApplication.translate("MainWindow", " Добавить метку", None))
        self.add_cursor_action.setToolTip(QCoreApplication.translate("MainWindow", "Добавить  метку", None))
        self.remove_cursor_action.setText(QCoreApplication.translate("MainWindow", "Удалить метку", None))
        self.remove_cursor_action.setIconText(QCoreApplication.translate("MainWindow", " Удалить метку", None))
        self.hide_curve_a_action.setText(QCoreApplication.translate("MainWindow", "Скрыть канал А", None))
        self.hide_curve_a_action.setToolTip(QCoreApplication.translate("MainWindow", "<html><head/><body><p><span style=' color:#0000ff;'>Скрыть канал А</span></p></body></html>", None))
        self.hide_curve_b_action.setText(QCoreApplication.translate("MainWindow", "Скрыть канал B", None))
        self.hide_curve_b_action.setToolTip(QCoreApplication.translate("MainWindow", "<html><head/><body><p><span style=' color:#ff0000;'>Скрыть канал B</span></p></body></html>", None))
        self.connection_action.setText(QCoreApplication.translate("MainWindow", "Подключение", None))
        self.select_language_action.setText(QCoreApplication.translate("MainWindow", "Язык", None))
        self.scoreDock.setWindowTitle(QCoreApplication.translate("MainWindow", "Степень различия", None))
        self.score_label.setText(QCoreApplication.translate("MainWindow", "<html><head/><body><p><span style=' font-size:48pt; color:#73d216;'>0%</span></p></body></html>", None))
        self.freqDock.setWindowTitle(QCoreApplication.translate("MainWindow", "Частота пробного сигнала", None))
        self.currentDock.setWindowTitle(QCoreApplication.translate("MainWindow", "Чувствительность по току", None))
        self.voltageDock.setWindowTitle(QCoreApplication.translate("MainWindow", "Амплитуда пробного сигнала", None))
        self.commentDock.setWindowTitle(QCoreApplication.translate("MainWindow", "Комментарий к точке", None))
        self.line_comment_pin.setPlaceholderText(QCoreApplication.translate("MainWindow", "Комментарий...", None))
        self.save_comment_push_button.setText(QCoreApplication.translate("MainWindow", "Сохранить комментарий", None))
        self.file_menu_action.setTitle(QCoreApplication.translate("MainWindow", "Файл", None))
        self.view_menu_action.setTitle(QCoreApplication.translate("MainWindow", "Вид", None))
        self.mode_menu_action.setTitle(QCoreApplication.translate("MainWindow", "Режим", None))
        self.help_menu_action.setTitle(QCoreApplication.translate("MainWindow", "Справка", None))
        self.test_plan_menu_action.setTitle(QCoreApplication.translate("MainWindow", "План тестирования", None))
        self.measurers_menu.setTitle(QCoreApplication.translate("MainWindow", "Измерители", None))
        self.toolBar_file.setWindowTitle(QCoreApplication.translate("MainWindow", "Файл", None))
        self.toolBar_file.setToolTip(QCoreApplication.translate("MainWindow", "Файл", None))
        self.toolBar_test.setWindowTitle(QCoreApplication.translate("MainWindow", "План тестирования", None))
        self.toolBar_test.setToolTip(QCoreApplication.translate("MainWindow", "Тестирование по плану", None))
        self.toolBar_write.setWindowTitle(QCoreApplication.translate("MainWindow", "Запись плана тестирования", None))
        self.toolBar_write.setToolTip(QCoreApplication.translate("MainWindow", "Запись плана тестирования", None))
        self.toolBar_cursor.setWindowTitle(QCoreApplication.translate("MainWindow", "Курсор", None))
        self.toolBar_compare.setWindowTitle(QCoreApplication.translate("MainWindow", "Сравнение", None))
        self.toolBar_compare.setToolTip(QCoreApplication.translate("MainWindow", "Сравнение", None))
        self.toolBar_mode.setWindowTitle(QCoreApplication.translate("MainWindow", "Режим", None))
        self.toolBar_mode.setToolTip(QCoreApplication.translate("MainWindow", "Режим", None))
        self.toolBar_language.setWindowTitle(QCoreApplication.translate("MainWindow", "toolBar", None))

