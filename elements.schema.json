{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "hg://hg.ximc.ru/eyepoint/eplab/elements.schema.json",
  "title": "EPLab PCB file format",
  "description": "This schema describes the EPLab files format for PCB components description. There is an additional data in the saves, but this only describes one main json file",
  "additionalProperties": false,
  "type": "object",
  "properties": {
    "elements": {
      "description": "Array of elements, each of them represents a component on the PCB.",
      "minItems": 1,
      "uniqueItems": true,
      "type": "array",
      "items": {
        "description": "Component on the PCB. May be a integrated circuit or SMD chip. Sometimes a nonexistent component is created just to place testing points inside it. Each board should contain at least one component, real or faked. So basically component provides convinient wrapper for pins.",
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "name": {
            "description": "Is set either by automatic recognition as one of the supported names or manually by user. See is_manual flag.",
            "type": "string"
          },
          "is_manual": {
            "description": "Is set when component was added manually and not with automated recognition of supported components. Otherwise it is false.",
            "type": "boolean"
          },
          "pins": {
            "description": "An array of testable pins of the PCB component. Pins are simple because they are just one point on the map, but they contain electrical data. Component may have no pins because there may be mechanical and not electrical components. They may still count for probe trajectory.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "description": "A pin for electrical test.",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "comment": {
                  "description": "Pin comment for user convenience.",
                  "type": "string"
                },
                "y": {
                  "description": "Y coordinate of the pin on the board image [pixels]",
                  "type": "number"
                },
                "x": {
                  "description": "X coordinate of the pin on the board image [pixels]",
                  "type": "number"
                },
                "ivc": {
                  "description": "An array of electrical measurements of the pin. There may be several reference measurements with various parameters, test measurements, or even no measurements because they haven't been done yet.",
                  "type": "array",
                  "items": {
                    "description": "IV curve measurement: measurement parameters and results (voltages and currents). Measurements can be reference, meaning the measurement from valid board and component.",
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "comment": {
                        "description": "Measurement comment for user convenience.",
                        "type": "string"
                      },
                      "measure_settings": {
                        "description": "The measurement details.",
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "probe_signal_frequency": {
                            "description": "Harmonic probe signal frequency. Units: Hz. Normally this parameter is set together with sampling rate for providing fixed resolution.",
                            "type": "number"
                          },
                          "max_voltage": {
                            "description": "Harmonic probe signal voltage amplitude. Units: Volts. This is open circuit voltage. Real voltage drop between probes during the measurement will be smaller due to finite current sensor impedance.",
                            "type": "number"
                          },
                          "max_current": {
                            "description": "Maximum short circuit current. Units: mA. This parameter may not be supported by the most devices.",
                            "type": "number"
                          },
                          "number_charge_points": {
                            "description": "This parameter determines delay added for testing component precharge before measurement. This parameter is set as number of samples. The value of the delay in seconds can be calculated as NumberChargePoints ∗ SamplingRate. These precharge points are not presented in measurement results. Warning: some devices don’t support precharge.",
                            "type": "integer"
                          },
                          "desc_frequency": {
                            "description": "This rate determines the period between subsequent samples in measured curve. Units: samples / second. Normally this parameter is set together with probe signal frequency for providing fixed resolution, which is determined by the SamplingRate / ProbeSignalFrequency ratio.",
                            "type": "number"
                          },
                          "flags": {
                            "description": "Flags for current sensor mode definition. Current sensor modes define resolution and noise level. Current sense resistors also limit the maximum current. See hardware manual for more detailed description of mode values for this parameter.",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "desc_frequency",
                          "flags",
                          "max_current",
                          "max_voltage",
                          "probe_signal_frequency",
                          "number_charge_points"
                        ]
                      },
                      "is_dynamic": {
                        "description": "The electrical measurement can reveal that it differs from time to time. This is called dynamic ivc and marked with this flag. If flag is not present, then flag is false.",
                        "type": "boolean"
                      },
                      "is_reference": {
                        "description": "Some measurements are marked as reference. Other test measurements must be compared with reference ones. They are always considered true. If flag is not present, then flag is false.",
                        "type": "boolean"
                      },
                      "iv_array": {
                        "description": "Measured voltages and currents in dependence with time as array. Time step between measurements is defined by measurement settings.",
                        "minItems": 2,
                        "type": "array",
                        "items": {
                          "description": "A pair of voltage [V] and current [A].",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "current": {
                              "type": "number"
                            },
                            "voltage": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "current",
                            "voltage"
                          ]
                        }
                      }
                    },
                    "required": [
                      "iv_array",
                      "measure_settings"
                    ]
                  }
                }
              },
              "required": [
                "ivc",
                "x",
                "y"
              ]
            }
          },
          "center": {
            "description": "Defines 2D coordinates for component center [pixels]. First x, then y.",
            "type": "array",
            "minItems": 2,
            "maxItems": 2,
            "items": {
              "type": "number"
            }
          },
          "bounding_zone": {
            "description": "TODO: please rewrite whole block with some understanding.",
            "anyOf": [
              {
                "description": "bounding_zone is an empty array when not used.",
                "maxItems": 0,
                "type": "array"
              },
              {
                "description": "bounding_zone is an array with 4 or 12 vertixes when used.",
                "minItems": 4,
                "maxItems": 12,
                "type": "array",
                "items": {
                  "description": "A 2D coordinates of ...",
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            ]
          },
          "rotation": {
            "description": "Each automatically recognized PCB component can be placed on the board in 4 different rotations - each one by additionl 90 degrees from the original. This parameter is reqired for correct placement of component and its picture.",
            "minimum": 0,
            "maximum": 3,
            "type": "integer"
          },
          "width": {
            "description": "Component width in px (measured by marginal pins).",
            "type": "number"
          },
          "height": {
            "description": "Component height in px (measured by marginal pins).",
            "type": "number"
          }
        },
        "required": [
          "bounding_zone",
          "center",
          "height",
          "rotation",
          "width",
          "name",
          "pins"
        ]
      }
    },
    "version": {
      "description": "Savefile version",
      "type": "string"
    }
  },
  "required": [
    "elements",
    "version"
  ]
}
